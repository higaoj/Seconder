'use server';

/**
 * @fileOverview A flow for automated vulnerability scanning using generative AI.
 *
 * - automatedVulnerabilityScan - A function to initiate the vulnerability scan process.
 * - AutomatedVulnerabilityScanInput - The input type for the automatedVulnerabilityScan function.
 * - AutomatedVulnerabilityScanOutput - The return type for the automatedVulnerabilityScan function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AutomatedVulnerabilityScanInputSchema = z.object({
  systemDescription: z
    .string()
    .describe('Description of the system or infrastructure to be scanned.'),
  threatLandscape: z
    .string()
    .describe(
      'Current threat landscape information, including recent vulnerabilities and attack vectors.'
    ),
  specificUseCases: z
    .string()
    .optional()
    .describe(
      'Specific use cases or scenarios to consider during vulnerability scanning. This helps identify vulnerabilities unique to certain applications or workflows.'
    ),
});
export type AutomatedVulnerabilityScanInput = z.infer<
  typeof AutomatedVulnerabilityScanInputSchema
>;

const AutomatedVulnerabilityScanOutputSchema = z.object({
  vulnerabilities: z
    .array(z.string())
    .describe('List of identified vulnerabilities.'),
  actionableInsights: z
    .string()
    .describe('Actionable insights for remediating identified vulnerabilities.'),
});
export type AutomatedVulnerabilityScanOutput = z.infer<
  typeof AutomatedVulnerabilityScanOutputSchema
>;

export async function automatedVulnerabilityScan(
  input: AutomatedVulnerabilityScanInput
): Promise<AutomatedVulnerabilityScanOutput> {
  return automatedVulnerabilityScanFlow(input);
}

const prompt = ai.definePrompt({
  name: 'automatedVulnerabilityScanPrompt',
  input: {schema: AutomatedVulnerabilityScanInputSchema},
  output: {schema: AutomatedVulnerabilityScanOutputSchema},
  prompt: `You are an expert cybersecurity analyst tasked with identifying vulnerabilities in systems.

  Based on the provided system description, current threat landscape, and specific use cases, identify potential vulnerabilities and provide actionable insights for remediation.

  System Description: {{{systemDescription}}}
  Threat Landscape: {{{threatLandscape}}}
  Specific Use Cases: {{{specificUseCases}}}

  Vulnerabilities should be a list of strings describing each one.
  Actionable insights should describe steps to remediate the vulnerabilities.

  Respond in a format parsable by Javascript, so that the vulnerabilities are easy to extract and the actionable insights are clear.
`,
});

const automatedVulnerabilityScanFlow = ai.defineFlow(
  {
    name: 'automatedVulnerabilityScanFlow',
    inputSchema: AutomatedVulnerabilityScanInputSchema,
    outputSchema: AutomatedVulnerabilityScanOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
